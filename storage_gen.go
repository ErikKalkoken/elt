// Generated by genstorage. DO NOT EDIT.

package main


func (st *Storage) ListEveCategory() ([]EveCategory, error) {
    return listEveObjects[EveCategory](st, bucketEveCategory)
}

func (st *Storage) ListFreshEveCategoryByID(ids []int32) ([]EveCategory, []int32, error) {
    return listFreshEveObjectsByID[EveCategory](st, bucketEveCategory, ids)
}

func (st *Storage) UpdateOrCreateEveCategory(objs []EveCategory) error {
    return updateOrCreateEveObjects(st, bucketEveCategory, objs)
}


func (st *Storage) ListEveCharacter() ([]EveCharacter, error) {
    return listEveObjects[EveCharacter](st, bucketEveCharacter)
}

func (st *Storage) ListFreshEveCharacterByID(ids []int32) ([]EveCharacter, []int32, error) {
    return listFreshEveObjectsByID[EveCharacter](st, bucketEveCharacter, ids)
}

func (st *Storage) UpdateOrCreateEveCharacter(objs []EveCharacter) error {
    return updateOrCreateEveObjects(st, bucketEveCharacter, objs)
}


func (st *Storage) ListEveEntity() ([]EveEntity, error) {
    return listEveObjects[EveEntity](st, bucketEveEntity)
}

func (st *Storage) ListFreshEveEntityByID(ids []int32) ([]EveEntity, []int32, error) {
    return listFreshEveObjectsByID[EveEntity](st, bucketEveEntity, ids)
}

func (st *Storage) UpdateOrCreateEveEntity(objs []EveEntity) error {
    return updateOrCreateEveObjects(st, bucketEveEntity, objs)
}


func (st *Storage) ListEveGroup() ([]EveGroup, error) {
    return listEveObjects[EveGroup](st, bucketEveGroup)
}

func (st *Storage) ListFreshEveGroupByID(ids []int32) ([]EveGroup, []int32, error) {
    return listFreshEveObjectsByID[EveGroup](st, bucketEveGroup, ids)
}

func (st *Storage) UpdateOrCreateEveGroup(objs []EveGroup) error {
    return updateOrCreateEveObjects(st, bucketEveGroup, objs)
}


func (st *Storage) ListEveType() ([]EveType, error) {
    return listEveObjects[EveType](st, bucketEveType)
}

func (st *Storage) ListFreshEveTypeByID(ids []int32) ([]EveType, []int32, error) {
    return listFreshEveObjectsByID[EveType](st, bucketEveType, ids)
}

func (st *Storage) UpdateOrCreateEveType(objs []EveType) error {
    return updateOrCreateEveObjects(st, bucketEveType, objs)
}

